let globalCarouselMovesCount = 0, resizeEventTimer = 0; window.addEventListener("resize", () => { clearTimeout(resizeEventTimer), resizeEventTimer = setTimeout(() => { getCarouselProperties(), setCarouselDots() }, 1e3) }), document.querySelector(".carousel-control.prev").addEventListener("click", () => handleCarouselMove("prev")), document.querySelector(".carousel-control.next").addEventListener("click", () => handleCarouselMove("next")); const getCarouselProperties = () => { const e = document.querySelectorAll(".carousel-slide").length, o = parseInt(getComputedStyle(document.querySelector(".carousel-slide")).minWidth); return { screensCount: e - (Math.round(100 / o) - 1), translatePercent: 100 } }, handleCarouselMove = e => { clearInterval(globalCarouselSlideTimer), globalCarouselSlideTimer = setInterval(() => handleCarouselMove("next"), 5e3); const o = getCarouselProperties(); switch (e) { case "prev": globalCarouselMovesCount -= 1; break; case "next": globalCarouselMovesCount += 1; break; default: globalCarouselMovesCount = e }globalCarouselMovesCount >= o.screensCount && (globalCarouselMovesCount = 0), globalCarouselMovesCount < 0 && (globalCarouselMovesCount = o.screensCount - 1), document.querySelectorAll(".carousel-slide").forEach(e => { e.style.transform = `translateX(-${globalCarouselMovesCount * o.translatePercent}%)` }), document.querySelector(".carousel-dot.active") && document.querySelector(".carousel-dot.active").classList.remove("active"), document.querySelector(`[data-carouselPosition="${globalCarouselMovesCount}"]`).classList.add("active") }; let globalCarouselSlideTimer = setInterval(() => { handleCarouselMove("next") }, 5e3); const setCarouselDots = () => { const e = getCarouselProperties(); let o = ""; for (i = 0; i < e.screensCount; i++)o += `<button data-carouselPosition="${i}" onclick="handleCarouselMove(${i})" class="carousel-dot ${i === globalCarouselMovesCount && "active"}"/>`; document.querySelector(".carousel-dots").innerHTML = o }; setCarouselDots(); let globalGestureStart = 0, globalGestureEnd = 0; const gestureArea = document.querySelector(".carousel"); window.addEventListener("keydown", e => { "ArrowRight" === e.key && handleCarouselMove("next"), "ArrowLeft" === e.key && handleCarouselMove("prev") }), gestureArea.addEventListener("touchstart", e => { globalGestureStart = e.changedTouches[0].screenX }), gestureArea.addEventListener("touchend", e => { globalGestureEnd = e.changedTouches[0].screenX, handleGesture() }), gestureArea.addEventListener("mousedown", e => { e.preventDefault(), globalGestureStart = e.screenX }), gestureArea.addEventListener("mouseup", e => { globalGestureEnd = e.screenX, handleGesture() }); const handleGesture = () => { globalGestureEnd <= globalGestureStart && handleCarouselMove("next"), globalGestureEnd >= globalGestureStart && handleCarouselMove("prev"), globalGestureStart = 0, globalGestureEnd = 0 };